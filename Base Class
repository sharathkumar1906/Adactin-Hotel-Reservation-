package com.base;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;

import io.github.bonigarcia.wdm.WebDriverManager;

public class AdactinBase {
	public static WebDriver driver;
	
	// for browser launch
	public static void launchBroswer(String url) {
		WebDriverManager.chromedriver().setup();
		driver = new ChromeDriver();
		driver.get(url);
	}
	
	//to print the URL of the web application
	public static void currentUrl() {
		System.out.println(driver.getCurrentUrl());
	}
	
	//to print the title of the web application
	public static void heading() {
		System.out.println(driver.getTitle());
	}
	
	// to send the values 
	public static void inputs(WebElement e, String a) {
		e.sendKeys(a);
	}
	
	// 1st it will clear the input field if any input already presented
	public static void clearAndsend(WebElement e, String a) {
		e.clear();
		e.sendKeys(a);

	}
	
	//used to click buttons 
	public static void button(WebElement f) {
		JavascriptExecutor j = (JavascriptExecutor) driver;
		j.executeScript("arguments[0].click()", f);
	}
	 // used to maximize the screen
	public static void bigScreen() {
		driver.manage().window().maximize();
	}
	
	// To access the drop downs using 
	public static void dropDown(WebElement g, String x) {
		Select s = new Select(g);
		s.selectByValue(x);

	}

	public static void dropDowns(WebElement g, String y) {
		Select s = new Select(g);
		s.selectByValue(y);

	}

	public static void menu(WebElement f, String d) {
		Select S = new Select(f);
		S.selectByVisibleText(d);

	}
	
	// used to perform wait operation
	public static void frezze(int i) throws InterruptedException {
		Thread.sleep(i);
	}
	
	//for capturing the screen shorts and stores in the folder 
	// created in the project.
	public static void screenshort() throws IOException {
		TakesScreenshot t = (TakesScreenshot) driver;
		File source = t.getScreenshotAs(OutputType.FILE);
		File f = new File("D:\\Eclipse workspace\\AdactinPage\\screenshort\\bookingcode.jpg");
		FileUtils.copyFile(source, f);
	}
	
	//used to capture the inputs sending the web application
	public static void values(WebElement k) {
		String m = k.getAttribute("value");
		System.out.println(m);

	}
	
	//for sending string values from excel to web application for login page
	public static String data(int r, int c) throws IOException {
		File f = new File("D:\\Eclipse workspace\\AdactinPage\\src\\test\\resources\\test\\Inputs data.xlsx");
		FileInputStream input = new FileInputStream(f);
		Workbook w = new XSSFWorkbook(input);
		Sheet sheet = w.getSheet("loginPage");
		Row row = sheet.getRow(r);
		Cell C = row.getCell(c);
		String N = C.getStringCellValue();
		return N;

	}
	
	public static String numberData(int r, int c) throws IOException {
		File f = new File("D:\\Eclipse workspace\\AdactinPage\\src\\test\\resources\\test\\Inputs data.xlsx");
		FileInputStream input = new FileInputStream(f);
		Workbook w = new XSSFWorkbook(input);
		Sheet sheet = w.getSheet("loginPage");
		Row row = sheet.getRow(r);
		Cell C = row.getCell(c);
		double N = C.getNumericCellValue();
		long l = (long)N;
		String valueOf = String.valueOf(l);
		return valueOf;

	}
	//for sending string values from excel to web application for searchHotel page
	public static String searchData(int x, int y) throws IOException {
		File file = new File("D:\\Eclipse workspace\\AdactinPage\\src\\test\\resources\\test\\Inputs data.xlsx");
		FileInputStream F = new FileInputStream(file);
		Workbook W = new XSSFWorkbook(F);
		Sheet l = W.getSheet("searchHotel");
		Row R = l.getRow(x);
		Cell q = R.getCell(y);
		String stringCellValue = q.getStringCellValue();
		return stringCellValue;
	}
	//for sending numeric values from excel to web application for searchHotel page
	public static String numericData(int x, int y) throws IOException {
		File file = new File("D:\\Eclipse workspace\\AdactinPage\\src\\test\\resources\\test\\Inputs data.xlsx");
		FileInputStream F = new FileInputStream(file);
		Workbook W = new XSSFWorkbook(F);
		Sheet l = W.getSheet("searchHotel");
		Row R = l.getRow(x);
		Cell q = R.getCell(y);
		double numericValues = q.getNumericCellValue();
		long L = (long) numericValues;
		String valueOf = String.valueOf(L);
		return valueOf;
	}
	//for sending string values from excel to web application for bookHotel page
	public static String ourdata(int a, int b) throws IOException {
		File file = new File("D:\\Eclipse workspace\\AdactinPage\\src\\test\\resources\\test\\Inputs data.xlsx");
		FileInputStream f = new FileInputStream(file);
		Workbook w = new XSSFWorkbook(f);
		Sheet s = w.getSheet("BookHotel");
		Row row = s.getRow(a);
		Cell cell = row.getCell(b);
		String stringCellValue = cell.getStringCellValue();
		return stringCellValue;
	}
	//for sending numeric values from excel to web application for bookHotel page
	public static String numerics(int x, int y) throws IOException {
		File file = new File("D:\\Eclipse workspace\\AdactinPage\\src\\test\\resources\\test\\Inputs data.xlsx");
		FileInputStream F = new FileInputStream(file);
		Workbook W = new XSSFWorkbook(F);
		Sheet l = W.getSheet("BookHotel");
		Row R = l.getRow(x);
		Cell q = R.getCell(y);
		double numericValues = q.getNumericCellValue();
		long L = (long) numericValues;
		String valueOf = String.valueOf(L);
		return valueOf;
	}
	// used to send dates for search hotel page
	public static String datevalues(int a, int b) throws IOException {
		File f = new File("D:\\Eclipse workspace\\AdactinPage\\src\\test\\resources\\test\\Inputs data.xlsx");
		FileInputStream input = new FileInputStream(f);
		Workbook w = new XSSFWorkbook(input);
		Sheet sheet = w.getSheet("searchHotel");
		Row row = sheet.getRow(a);
		Cell cell = row.getCell(b);
		Date dateCellValue = cell.getDateCellValue();
		//converting date formate to string, because sendkeys will accept only string values
		SimpleDateFormat d = new SimpleDateFormat("dd/MM/yyyy");
		String date = d.format(dateCellValue);
		return date;

	}

}
